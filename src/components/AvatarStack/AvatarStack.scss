@use '../../../styles/mixins';
@use '../UserAvatar/mixins' as avatarMixins;
@use '../variables';

$block: '.#{variables.$ns-new}avatar-stack';

#{$block} {
    $border-width: 1px;

    display: inline-flex;
    justify-content: flex-end;
    flex-direction: row-reverse;

    margin: 0;
    padding: 0;

    &__item {
        display: flex;
        list-style: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'/%3E");
        z-index: 0;
        border: solid $border-width var(--g-color-line-generic-solid);
        border-radius: 100%;

        &_overlap-size_s:not(:first-child) {
            margin-inline-end: calc(-1 * (var(--g-spacing-1) + #{$border-width}));
        }

        &_overlap-size_m:not(:first-child) {
            margin-inline-end: calc(-1 * (var(--g-spacing-2) + #{$border-width}));
        }

        &_overlap-size_l:not(:first-child) {
            margin-inline-end: calc(-1 * (var(--g-spacing-3) + #{$border-width}));
        }
    }

    &__more-button {
        @include mixins.button-reset;
        @include mixins.button-outline;

        border-radius: 100%;

        background-color: var(--g-color-base-generic);

        &_size {
            @include avatarMixins.size;

            &_xs {
                font-size: var(--g-text-caption-1-font-size);
            }

            &_s {
                font-size: var(--g-text-caption-2-font-size);
            }

            &_m,
            &_l {
                font-size: var(--g-text-body-1-font-size);
            }

            &_xl {
                font-size: var(--g-text-body-2-font-size);
            }
        }
    }
}
