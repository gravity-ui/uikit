@use '../variables';

$block: '.#{variables.$ns}label';
$disabled: #{$block}_disabled;
$transitionDuration: 0.15s;
$transitionTimingFunction: ease-in-out;

@mixin themeState($bgColor, $bgHoverColor, $textColor, $borderColor: none) {
    color: #{$textColor};
    background-color: #{$bgColor};

    @if $borderColor != none {
        --border-size: 1px;
        border: var(--border-size) solid #{$borderColor};
    }

    // hover on interactive label (excluding hover on addon)
    &:not(#{$disabled})#{$block}_is-interactive:hover:not(
            :has(#{$block}__addon_interactive:hover)
        ) {
        background-color: #{$bgHoverColor};
    }

    //fallback for old browsers
    @supports not selector(:has(*)) {
        &:not(#{$disabled})#{$block}_is-interactive:hover {
            background-color: #{$bgHoverColor};
        }
    }

    // hover on action button
    &:not(#{$disabled}) #{$block}__addon_interactive {
        --yc-button-background-color-hover: #{$bgHoverColor};

        &:hover,
        &:focus,
        &:active {
            color: #{$textColor};
        }
    }
}

@mixin sizeState($margin, $mainSize, $rAddon, $lAddon, $borderRadius) {
    height: #{$mainSize};
    border-radius: #{$borderRadius};
    & #{$block}__text {
        line-height: #{$mainSize};
        margin: 0 #{$margin};
    }

    & #{$block}__addon {
        --addon-size: calc(#{$mainSize} - var(--border-size) * 2);
        width: var(--addon-size);
        height: var(--addon-size);
    }

    &#{$block}_has-right-addon #{$block}__text {
        margin-right: #{$rAddon};
    }

    &#{$block}_has-left-addon #{$block}__text {
        margin-left: #{$lAddon};
    }
}

#{$block} {
    display: inline-flex;
    align-items: center;
    position: relative;
    transition-property: opacity, color, background-color;
    transition-duration: $transitionDuration;
    transition-timing-function: $transitionTimingFunction;
    box-sizing: border-box;

    --border-size: 0px;

    &__text {
        display: flex;
        align-items: baseline;
        width: 100%;
        text-align: center;
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
    }

    &__value {
        display: flex;
        opacity: 0.7;
    }

    &__separator {
        margin: 0 4px;
    }

    // & selector added to up priority over button styles
    & &__addon {
        display: flex;
        align-items: center;
        justify-content: center;

        &_side_left,
        &_side_right {
            position: absolute;
            top: 0;
        }

        &_side_left {
            left: 2px;
        }

        &_side_right {
            right: 0;
        }

        &_interactive {
            --yc-button-background-color: transparent;

            cursor: pointer;
            color: inherit;
            transition: color, background-color;
            transition-duration: $transitionDuration;
            transition-timing-function: $transitionTimingFunction;
        }
    }

    &_size {
        &_xs {
            @include sizeState(8px, 20px, 22px, 24px, var(--yc-border-radius-xs));
        }

        &_s {
            @include sizeState(10px, 24px, 26px, 28px, var(--yc-border-radius-s));
        }

        &_m {
            @include sizeState(12px, 28px, 32px, 32px, var(--yc-border-radius-m));
        }
    }

    &_disabled {
        opacity: 0.7;
        pointer-events: none;
    }

    &_is-interactive {
        cursor: pointer;
    }

    &_theme {
        &_normal {
            @include themeState(
                var(--yc-color-base-misc),
                var(--yc-color-base-misc-hover),
                var(--yc-color-text-misc-heavy)
            );
        }

        &_success {
            @include themeState(
                var(--yc-color-base-positive),
                var(--yc-color-base-positive-hover),
                var(--yc-color-text-positive-heavy)
            );
        }

        &_info {
            @include themeState(
                var(--yc-color-base-info),
                var(--yc-color-base-info-hover),
                var(--yc-color-text-info-heavy)
            );
        }

        &_warning {
            @include themeState(
                var(--yc-color-base-warning),
                var(--yc-color-base-warning-hover),
                var(--yc-color-text-warning-heavy)
            );
        }

        &_danger {
            @include themeState(
                var(--yc-color-base-danger),
                var(--yc-color-base-danger-hover),
                var(--yc-color-text-danger-heavy)
            );
        }

        &_unknown {
            @include themeState(
                var(--yc-color-base-neutral),
                var(--yc-color-base-neutral-hover),
                var(--yc-color-text-complementary)
            );
        }

        &_clear {
            @include themeState(
                transparent,
                var(--yc-color-base-simple-hover-solid),
                var(--yc-color-text-complementary),
                var(--yc-color-line-generic)
            );
        }
    }
}
