@use '../variables';

$block: '.#{variables.$ns}segmented-radio-group';

$option-sizes: (
    's': 24px,
    'm': 28px,
    'l': 36px,
    'xl': 44px,
);

$text-spacings: (
    's': 10px,
    'm': 13px,
    'l': 18px,
    'xl': 25px,
);

#{$block} {
    --_--border-width: 1px;
    --_--transition-time: 0.15s;

    box-sizing: border-box;
    display: inline-flex;
    flex-direction: row;
    font-family: var(--g-text-body-font-family);
    font-weight: var(--g-text-body-font-weight);
    position: relative;

    &_size {
        &_s {
            --_--border-radius: var(--g-border-radius-s);
        }

        &_m {
            --_--border-radius: var(--g-border-radius-m);
        }

        &_l {
            --_--border-radius: var(--g-border-radius-l);
        }

        &_xl {
            --_--border-radius: var(--g-border-radius-xl);
        }
    }

    &_width_auto {
        max-width: 100%;
    }

    &_width_max {
        width: 100%;
    }

    &__option {
        position: relative;
        flex: 1 1 auto;
        user-select: none;
        font-size: var(--g-text-body-1-font-size);
        text-align: center;

        cursor: pointer;
        transform: scale(1);
        transition: color var(--_--transition-time) linear;

        #{$block}_width_auto &,
        #{$block}_width_max & {
            overflow: hidden;
        }

        @each $size, $height in $option-sizes {
            #{$block}_size_#{$size} & {
                height: $height;
                line-height: $height;

                @if $size == xl {
                    font-size: var(--g-text-body-2-font-size);
                }
            }
        }

        &::before {
            z-index: -1;
            position: absolute;
            inset-inline-start: 0;
            inset-block: var(--_--border-width);
            content: '';
            width: var(--_--border-width);
            background-color: var(--g-color-line-generic);
        }

        &::after {
            content: '';
            position: absolute;
            z-index: -1;
            inset: 0;
            border: var(--_--border-width) solid var(--g-color-line-generic);
            border-radius: 0;

            transition:
                background-color var(--_--transition-time) linear,
                border-color var(--_--transition-time) linear;
        }

        &:not(:first-child):not(&_checked)::after {
            border-inline-start-width: 0;
        }

        &:not(:last-child):not(&_checked):after {
            border-inline-end-width: 0;
        }

        &:first-child {
            border-start-start-radius: var(--_--border-radius);
            border-end-start-radius: var(--_--border-radius);

            &::before {
                display: none;
            }

            &::after {
                border-start-start-radius: var(--_--border-radius);
                border-end-start-radius: var(--_--border-radius);
            }
        }

        &:last-child {
            border-start-end-radius: var(--_--border-radius);
            border-end-end-radius: var(--_--border-radius);

            &::after {
                border-start-end-radius: var(--_--border-radius);
                border-end-end-radius: var(--_--border-radius);
            }
        }

        &:not(&_checked):not(&_disabled):hover {
            &::after {
                background-color: var(--g-color-base-simple-hover);
            }
        }

        &:has(#{&}-control:focus-visible) {
            outline: 2px solid var(--g-color-line-misc);
            outline-offset: calc(-1 * var(--_--border-width));
        }

        &_checked {
            cursor: default;
            border-color: var(--g-color-line-brand);

            &::after {
                background-color: var(--g-color-base-selection);
                border-color: var(--g-color-line-brand);
            }

            &::before,
            & + #{$block}__option::before {
                background-color: transparent;
            }
        }

        &_disabled {
            cursor: default;

            &::after {
                background-color: var(--g-color-base-generic);
            }
        }

        &_disabled#{&}_checked {
            &::after {
                background-color: var(--g-color-base-generic-accent);
                border-color: var(--g-color-line-generic-accent);
            }
        }
    }

    &__option-control {
        position: absolute;
        inset-block-start: 0;
        inset-inline-start: 0;
        width: 100%;
        height: 100%;
        margin: 0;
        padding: 0;
        border: none;
        outline: none;
        opacity: 0;
        cursor: inherit;
    }

    &__option-text {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        gap: 8px;
        white-space: nowrap;
        color: var(--g-color-text-complementary);
        overflow: hidden;

        #{$block}_width_auto &,
        #{$block}_width_max & {
            display: block;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        #{$block}_width_auto &_icon,
        #{$block}_width_max &_icon,
        &_icon {
            height: 100%;
            display: flex;
            align-items: center;
        }

        #{$block}__option:not(#{$block}__option_checked):not(#{$block}__option_disabled):hover & {
            color: var(--g-color-text-primary);
        }

        #{$block}__option_checked & {
            color: var(--g-color-text-brand-heavy);
        }

        #{$block}__option_disabled & {
            color: var(--g-color-text-hint);
        }

        #{$block}__option_disabled#{$block}__option_checked & {
            color: var(--g-color-text-secondary);
        }

        @each $size, $margin in $text-spacings {
            #{$block}_size_#{$size} & {
                margin: 0 $margin;
            }
        }
    }
}
